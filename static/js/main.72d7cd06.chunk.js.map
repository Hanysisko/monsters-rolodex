{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monst","id","name","email","CardList","monstersprop","map","SearchBox","placeholderprop","handleChangeprop","type","placeholder","onChange","App","handleChange","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","item","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,eADtB,IAEE,mCAAqBL,EAAMI,MAAME,KAAjC,MAASN,EAAMK,IACf,6BAAKL,EAAMI,MAAMG,YCHRC,G,MAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMS,aAAaC,KAAI,SAAAN,GAAK,OAC3B,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCJVM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,iBAApB,OACvB,8BACE,uBACEZ,UAAU,aACVa,KAAK,SACLC,YAAcH,EACdI,SAAWH,QC4CFI,G,wDA/Cb,aAAe,IAAD,8BACZ,gBAeFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAdvC,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEK,SAASK,S,oBAO1C,WAAU,IAAD,EAC2BC,KAAKP,MAA/BC,EADD,EACCA,SAAUJ,EADX,EACWA,YAIZW,EAAmBP,EAASQ,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAK6B,cAAcC,SAASf,EAAYc,kBAE9F,OACE,sBAAKlC,UAAU,MAAf,UAEE,oDACA,wEAEA,cAAC,EAAD,CACEW,gBAAgB,qBAChBC,iBAAmBkB,KAAKb,eAG1B,cAAC,EAAD,CACET,aAAcuB,W,GAxCNK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72d7cd06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className='card-container'>\r\n    <img alt=\"monst\" src={`https://robohash.org/${props.monst.id}?set=set2`} /> {/* &size=180x180   changing res of image from url */}\r\n    <h1 key={props.id}> {props.monst.name} </h1>\r\n    <h2>{props.monst.email}</h2>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n  <div className='card-list'>\r\n    {props.monstersprop.map(monst => (\r\n      <Card key={monst.id} monst={monst} />\r\n    ))}\r\n  </div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholderprop, handleChangeprop }) => (\r\n  <div>\r\n    <input \r\n      className='search-box'\r\n      type='search' \r\n      placeholder={ placeholderprop }\r\n      onChange={ handleChangeprop } // e => this.setState({ searchField : e.target.value })\r\n    />\r\n  </div>\r\n)\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters:users }))\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField : e.target.value });\n  }\n  \n  render() {  \n    const { monsters, searchField } = this.state;\n    // const monsters = this.state.monsters; // to na górze to szybsza metoda zapisu tych dwóch linijek\n    // const searchField = this.state.searchField;\n\n    const filteredMonsters = monsters.filter(item => item.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        \n        <h1> Monsters Rolodex </h1>\n        <h2> by Hanysisko and Complete React 2022 </h2>\n\n        <SearchBox \n          placeholderprop='search monsters...'\n          handleChangeprop={ this.handleChange }\n        />\n\n        <CardList \n          monstersprop={filteredMonsters}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}